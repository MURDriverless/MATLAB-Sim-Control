%Load track data generated by 'parse_track.py'
load("track_data")

%Set initial position and pose of Car
c_init_x = 0;
c_init_y = 0;
c_init_theta = 0;

%Create World for simulation
steptime = 0.001;
world = World(left_x,left_y,right_x,right_y,tk_x,tk_y,c_init_x,c_init_y,c_init_theta,steptime);

%Plot Track to confirm mapping
world.plotTrack(left_x,left_y,right_x,right_y,tk_x,tk_y);

%Create SLAM
noise_type = 'uniform';          %Set 'uniform' or 'normal' noise dist 
cone_n_val = 0.1;                %Set 'range' or 'stddev' for cone noise
car_n_val = [0,0,0,0,0];         %Set 'range' or 'stddev' for car state noise
radius = 10;                     %Set radius of SLAM perception
slam = SLAM(noise_type,cone_n_val,car_n_val,radius,steptime);

%Create Path Planner


%Create Controller


